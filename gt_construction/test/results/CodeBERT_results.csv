commit_message,commit_url,original_target,predicted
"""Change MixedModeAlgorithm default to TCP. Closes #7779.  MixedModeAlgorithm::Proportional will throttle TCP connections when utp is in use and users is expecting maximum speed no matter what, so now disable the throttling.""",https://github.com/qbittorrent/qBittorrent/commit/534ed91d043abfe8ad7ccd307e4c8b060bdaf214,1,0
"""Further increase wait times for shove tree testcase""",https://github.com/fzi-forschungszentrum-informatik/ros_bt_py/commit/18358c431954d367c0df8ea4f8cbdd59627fe05c,0,0
"""ValueTracking: Small cleanup in ComputeNumSignBits  Constant contains the isAllOnesValue and isNullValue predicates, not ConstantInt.  llvm-svn: 224848""",https://github.com/tonlabs/TVM-Compiler/commit/a55027f68a3b47236bcc9a7a30940a54517a0200,0,0
"""upload-pack: drop lookup-before-parse optimization  When we receive a ""have"" line from the client, we want to load the object pointed to by the sha1. However, we are careful to do:    o = lookup_object(sha1);   if (!o || !o->parsed) 	  o = parse_object(sha1);  to avoid loading the object from disk if we have already seen it.  However, since ccdc603 (parse_object: try internal cache before reading object db), parse_object already does this optimization internally. We can just call parse_object directly.  Signed-off-by: Jeff King <peff@peff.net> Signed-off-by: Junio C Hamano <gitster@pobox.com>""",https://github.com/git/git/commit/a6eec1263883ce9787a354e1635b7b732e72c3c9,1,1
"""sd-dhcp-client: --omg-optimized  Passing the protocol to socket() is redundant as it will be specified again in bind(). Dropping the redundancy reduces the cost of bind() from ~30ms to ~0ms. For details see [0].  networkd in a container (i.e., with next to no network latency) can now negotiate a DHCP lease in 0.7 - 5 ms.  Thanks to Kay for help with debugging and to Daniel Borkmann for the pointer to fix the problem.  [0]: <https://git.kernel.org/cgit/linux/kernel/git/torvalds/linux.git/commit/?id=902fefb82ef72a50c78cb4a20cc954b037a98d1c>""",https://github.com/systemd/systemd/commit/66a67effcc5beaf8a61e1c1147c3114b02a96439,1,1
"""Fix #967: Debugging Django in VSC with subprocess debugging is very slow  Avoid hogging CPU while waiting on the subprocess notification queue.""",https://github.com/microsoft/ptvsd/commit/1a13aa2450fee2a0aac4ecbe84d448a1700309b7,1,1
"""Effects cache: Fix memory leak  The BitmapRef reference counter never reached 0 because it was part of the key, preventing deletion. Changed it to a pointer. The value is never read so doesn't matter if it becomes stale.  Fix #3163""",https://github.com/EasyRPG/Player/commit/72749b7a94ea09ec59870e099aac9bbf5de89a45,1,0
"""Test for virtual instead of pure here. It has the exact same effect, and John claims it will improve performance.   git-svn-id: https://llvm.org/svn/llvm-project/cfe/trunk@174341 91177308-0d34-0410-b5e6-96231b3b80d8""",https://github.com/llvm-mirror/clang/commit/7cea1487602536e91a2c36511f5ad56ff1b2dc68,1,1
"""strbuf_getwholeline: use getc macro  strbuf_getwholeline calls fgetc in a tight loop. Using the getc form, which can be implemented as a macro, should be faster (and we do not care about it evaluating our argument twice, as we just have a plain variable).  On my glibc system, running ""git rev-parse refs/heads/does-not-exist"" on a file with an extremely large (1.6GB) packed-refs file went from (best of 3 runs):    real    0m19.383s   user    0m18.876s   sys     0m0.528s  to:    real    0m18.900s   user    0m18.472s   sys     0m0.448s  for a wall-clock speedup of 2.5%.  Signed-off-by: Jeff King <peff@peff.net> Signed-off-by: Junio C Hamano <gitster@pobox.com>""",https://github.com/git/git/commit/3446a59b3950d57960e27f8a2c7e41462bd2bcf4,1,1
"""changed to fig.show to avoid floating figure""",https://github.com/jungmannlab/picasso/commit/e0151ae457b66d10781b3efa85e97b06f852734f,0,0
"""setForcedUpdateAllAabbs to false; Reduces stepSimulation time by 35%.  This causes a drop from 6.5ms to 4.2ms on my machine.""",https://github.com/rwengine/openrw/commit/f7bd8701db2a98678e206ae78515b0a0e16b092b,1,1
"""slight optimizations: avoid unnecessary writes  but this happens only during config load, so no real gain""",https://github.com/rsyslog/rsyslog/commit/fa8ff7601de0340fbc0d3892b418a5dbb32a6e24,1,1
"""grep: skip pthreads overhead when using one thread  Skip the administrative overhead of using pthreads when only using one thread. Instead take the non-threaded path which would be taken under NO_PTHREADS.  The threading support was initially added in commit 5b594f457a (""Threaded grep"", 2010-01-25) with a hardcoded compile-time number of 8 threads. Later the number of threads was made configurable in commit 89f09dd34e (""grep: add --threads=<num> option and grep.threads configuration"", 2015-12-15).  That change did not add any special handling for --threads=1. Now we take a slightly faster path by skipping thread handling entirely when 1 thread is requested.  Signed-off-by: Ævar Arnfjörð Bjarmason <avarab@gmail.com> Signed-off-by: Junio C Hamano <gitster@pobox.com>""",https://github.com/git/git/commit/9ec726a4120bb219530faf988198a704ec7dd1f1,1,1
"""Fix constant editor redraw after shortcut  Introduced by me by mistake on #71328. Fixes #71652.""",https://github.com/godotengine/godot/commit/51777a2914dc46f2831752b74db6276369df0905,1,0
"""string-util: optimize strshorten() a bit  There's no reason to determine the full length of the string, it's sufficient to know whether it is larger than the intended size...""",https://github.com/systemd/systemd/commit/47b33c7d5284492e5679ccfabafe8c9738de8cb3,1,1
"""cipher: Fix IDEA cipher for clearing memory.  * cipher/idea.c (invert_key): Use wipememory, since this kind of memset may be removed by compiler optimization.  -- Reported-by: Zhaomo Yang and Brian Johannesmeyer Signed-off-by: NIIBE Yutaka <gniibe@fsij.org>""",https://github.com/gpg/libgcrypt/commit/bf6d5b10cb4173826f47ac080506b68bb001acb2,1,0
"""use mimetype determination by extension for direct upload""",https://github.com/IQSS/dataverse/commit/4d930df0a5b5203a8a40ebccc3b16cc94daaedea,0,0
"""core/stream.c: very, very slightly speed up multiline reads""",https://github.com/rsyslog/rsyslog/commit/4af7e0616618118cc1ed7deba6a7fcefeb4b4c08,1,1
"""Improved X11 screen_get_refresh_rate performance""",https://github.com/godotengine/godot/commit/085255bd0ed2c36b217769c6f75c8ea856725b1a,1,1
"""When the cache is exhausted do not delete unreferenced assets that were used during the last 50ms (approx. 3 frames).  The current behaviour (flush everything unreferenced when cache is full) was added to workaround out-of-memory issues on systems with limited RAM but this direct unload makes some use cases like face rendering in the Battle scene with Gauge style really slow (when the cache is full the face is unloaded and reloaded from disk once every frame).  I hope that 50ms is a good compromise here.  Fix #2509""",https://github.com/EasyRPG/Player/commit/a086820de8eadbd830f3aa5ebf822d548a465879,1,1
"""Include temporary token light sources  This adds back in necessary functionality for Expose Last Path to function correctly.""",https://github.com/RPTools/maptool/commit/e7086a8db30ad9bc350bfd782f047428df126be7,1,0
"""Fix another case where we should be using isBeforeInTranslationUnit().  llvm-svn: 163533""",https://github.com/plctlab/llvm-project/commit/a0fa5d656412fa8af4898eccca30fc7c2de4fa8f,0,0
"""Swap to using _longjmp/_setjmp instead of longjmp/setjmp  _longjmp/_setjmp do not manipulate the signal mask whilst longjmp/setjmp may do. Online sources suggest this could result in a significant speed up in the context switching.  Reviewed-by: Rich Salz <rsalz@openssl.org>""",https://github.com/openssl/openssl/commit/06b9ff06cc7fdd8f51abb92aaac39d3988a7090e,1,1
"""Remove useless codec from system.asynchronous_metric_log""",https://github.com/ClickHouse/ClickHouse/commit/a45e3d47adacc59699de26b59e5966307b97b8fb,1,0
"""Disable heading updates for .FollowWithCourse  Fixes #2180.""",https://github.com/mapbox/mapbox-gl-native/commit/2f30dfe97d851f2a2bb4141dc234013b01f8afd3,1,0
"""code expected value in seconds, not interval object""",https://github.com/pgq/skytools-legacy/commit/a44168ff3b0d9dba24526fa566173be0631f3035,0,0
"""Do not reload resources and send notification if locale is not changed.""",https://github.com/godotengine/godot/commit/829349d2ca6e49eaf0703154467ee8020484b387,1,0
"""OpenMP: Adding an ifdef around chunksize for static schedule for GCC compiler.""",https://github.com/kokkos/kokkos/commit/910d43e45b04fb0e7d155233f7069cab0aeefc79,1,1
"""#4346: Listing samples for a lab officer can be slow""",https://github.com/SORMAS-Foundation/SORMAS-Project/commit/d0cf26216986d1e7689369d0f7b01490a6a2e9c6,1,0
"""logging: remove assertion in nm_logging_enabled() from production builds  We really expect this assertion not to be violated.  As we want for nm_logging_enabled() to become smaller and inline, remove the runtime assertion from regular builds.  Live fast and dangerous.""",https://github.com/NetworkManager/NetworkManager/commit/1a070f6a44a0f1a39c174425be96dd8834bea25e,1,0
"""sort semeval2014 aspects consistently with the datasets""",https://github.com/LorenzoAgnolucci/BERT_for_ABSA/commit/6092f0b635ae825616dc11ca91a0dcb6fe99e6f1,0,0
"""Try to turn off/on all lights faster #331""",https://github.com/diyhue/diyHue/commit/c1f207cb15ec51a1ce4d4d5aa81d710af17cc0f9,0,0
"""use startswith if org_id is 15 char""",https://github.com/SFDO-Tooling/MetaDeploy/commit/5a2304750e2710e94bdba36991de5b77c20a141e,0,0
"""Fix new performance regressions (short delay_usec)  My Mac was using 20% cpu again, which was related to the Javascript Export plugin.  I had however no export templates setup in the project so this is more of a stopgap fix.""",https://github.com/godotengine/godot/commit/ab5eaf0ad97cfac2d3bc924ae99c5fc83cd3e838,1,1
"""fetch-pack: grow stateless RPC windows exponentially  When updating large repositories, the LARGE_FLUSH limit (that is, the limit at which the window growth strategy switches from exponential to linear) is reached quite quickly. Use a conservative exponential growth strategy when that limit is reached instead (and increase LARGE_FLUSH so that there is no regression in window size).  This optimization is only applied during stateless RPCs to avoid the issue raised and fixed in commit 44d8dc54 (Fix potential local deadlock during fetch-pack, 2011-03-29).  Signed-off-by: Jonathan Tan <jonathantanmy@google.com> Reviewed-by: Jonathan Nieder <jrnieder@gmail.com> Signed-off-by: Junio C Hamano <gitster@pobox.com>""",https://github.com/git/git/commit/da470981defcace6e909b74ebc4ab5a40a702728,1,1
"""improve perf of combine dims using views""",https://github.com/project-asgard/asgard/commit/076f8b296ce85de4ae54ccfea88f8074e42c6ffe,1,1
"""core: optimize nm_match_spec_s390_subchannels() to return early  No need to parse the subchannels if the spec list is empty.  This isn't actually an issue, because nm_match_spec_s390_subchannels() was never called with empty spec list.""",https://github.com/NetworkManager/NetworkManager/commit/de9848aa66d2ef97a53ad04c537df4859baea243,1,1
"""dhcp: support _LOGx_ENABLED() macro in dhcp-client  The macro _LOGx_ENABLED() is defined with a default implementation that depends on _NMLOG_DOMAIN. Although that default does not check for LOGD_DHCP4 vs. LOGD_DHCP6, still provide it. Determining the correct domain might involve a larger performance impact that what we would safe.""",https://github.com/NetworkManager/NetworkManager/commit/e3d2fc861b86bbde2bfa3987e3f89a414046219a,1,1
"""read-cache: speed up add_index_entry during checkout  Teach add_index_entry_with_check() to see if the path of the new item is greater than the last path in the index array before attempting to search for it.  During checkout, merge_working_tree() populates the new index in sorted order, so this change will save a binary lookups per file.  This preserves the original behavior but simply checks the last element before starting the search.  This helps performance on very large repositories.  Signed-off-by: Jeff Hostetler <jeffhost@microsoft.com> Signed-off-by: Junio C Hamano <gitster@pobox.com>""",https://github.com/git/git/commit/e5494631ed94017da862d55eb6393a0d01d8b91d,1,1
"""[Net] Fix SceneReplicationConfig setter.  Used by resource loader, it would always add properties as both sync and spawn, disregarding the actual option value.""",https://github.com/godotengine/godot/commit/32b16c876b92c3dae35046d37740fc6e5cc65b24,1,0
"""Use DXT1 when compressing PNGs with RGB format  This results in much smaller file sizes with the same quality""",https://github.com/godotengine/godot/commit/f84c6df8d1aec35fe53521f241b26fc5312d26e3,1,1
"""fs-util: increase start buffer size in readlinkat_malloc()  I noticed while profiling journald that we invoke readlinkat() a ton on open /proc/self/fd/<fd>, and that the returned paths are more often than not longer than the 99 chars used before, when we look at archived journal files. This means for these cases we generally need to execute two rather than one syscalls.  Let's increase the buffer size a tiny bit, so that we reduce the number of syscalls executed. This is really a low-hanging fruit of optimization.""",https://github.com/systemd/systemd/commit/8e060ec225b74bbf22e5bdbacd604efcc73294c0,1,1
"""Reset Max. Log Size to 20 MB""",https://github.com/CounterpartyXCP/counterparty-core/commit/7d992d158659339831892687f9fc01d447f8afc7,0,0
"""Verifier: Loosen r233559 check for 'function:' field in MDSubprogram  Stop worrying about what the `function:` field is in `MDSubprogram`, since it could be a bitcast [1].  Just check its type and leave it at that.  [1]: http://lab.llvm.org:8080/green/job/clang-stage2-configure-Rlto_build/3540/  llvm-svn: 233562""",https://github.com/intel/cm-compiler/commit/894b1e385c74aa7f05abbba779022da68a2db372,0,0
"""Gzipping the _rates""",https://github.com/gem/oq-engine/commit/c9a92dac9b354a5418c8771ceb5b7d529186c728,1,1
"""main: minor optimization  Let's remove one memory allocation in the common path.""",https://github.com/systemd/systemd/commit/4dc63c4bc7850bc570fcf33800a444e09dec81d5,1,1
"""regular Pure() is _pure; pprint(Pure()) is pure""",https://github.com/diofant/diofant/commit/6ab22e0a9180886c437fb6cb41ca7a847145a9d5,0,0
"""Increase the sleep period when updating pre-processing gcode to 1/60th of a second, which is pretty reasonable.""",https://github.com/FormerLurker/Octolapse/commit/7706f0bafdd186495dd292d9326c791cdfd9cf75,0,0
"""device-port: Return early from pa_device_port_set_latency_offset() if the offset doesn't change.  This avoids sending change notifications when nothing changes.""",https://github.com/pulseaudio/pulseaudio/commit/78df02dba61d4d9e4f89225ddf69d5cfcdc9d184,1,1
"""Fix Windows Activate Process""",https://github.com/godotengine/godot/commit/e201e5bf30bdd7ea4f515ebf8d47a70172683f7e,1,0
"""ENH: performance enhancement, fixes #411""",https://github.com/scikit-bio/scikit-bio/commit/76b40140b6e9104288932f60c2a10b7b445f41fa,1,1
"""AST: Simplify CharUnits::alignmentAtOffset  CharUnits::alignmentAtOffset is equivalent to llvm::MinAlign but slightly less efficient.  Use it's implementation instead.   git-svn-id: https://llvm.org/svn/llvm-project/cfe/trunk@202099 91177308-0d34-0410-b5e6-96231b3b80d8""",https://github.com/llvm-mirror/clang/commit/90cdec1762c2a72b7c63f67c025597ab9ac8cae0,1,1
"""Correctly update LiveVariables when an instruction changes  llvm-svn: 12561""",https://github.com/ykfre/BsodSurvivor/commit/a333b1382f6883c6ad6626e899c0f027c1e5ae9d,0,0
"""#5612: Increased chunk size for lazy loading to 100  - Avoids a 2nd query when initializing a list view""",https://github.com/SORMAS-Foundation/SORMAS-Project/commit/fcf3c0746d6e37ff18a376b7d2adeb19ec6195d8,1,1
"""I believe this logic needs to be reversed.""",https://github.com/yt-project/yt/commit/68068dd0212b3cb5bad2fde085ddc8be4cff4a33,1,0
"""Increase RemoteDebuggerPeerTCP poll to 6.9ms  Fix high CPU usage on MacOS by reverting the polling for Network debugging to match 144hz refresh rate.""",https://github.com/godotengine/godot/commit/c37bd41c794819e0b6bc3ad4b162548057098e1c,1,1
"""core: add nm_utils_get_monotonic_timestamp_ns_cached() helper  Add a helper function to cache the current timestamp and return it. The caching is a performance optimization, but it serves a much more important purpose: repeatedly getting the timestamp likely will yield different timings. So, commonly, within a certain context we want to get the current time once, and stick to that as ""now"".""",https://github.com/NetworkManager/NetworkManager/commit/4417b8bf3eef8ca7cf45dc973ab107249bd10d67,1,1
"""Add a heuristic avoiding joining framebuffers horizontally  ...when texturing from the other one.  Greatly improves GPU performance in Rainbow Six: Vegas.  Fixes #9324.""",https://github.com/hrydgard/ppsspp/commit/adda49d05d1091decb8832259f0ca4e9e085f143,1,1
"""[analyzer] micro optimization as per Jordan’s feedback on r177905.  git-svn-id: https://llvm.org/svn/llvm-project/cfe/trunk@178062 91177308-0d34-0410-b5e6-96231b3b80d8""",https://github.com/llvm-mirror/clang/commit/df5f80f8a34e26a4fb77f48f858c7838426a0785,1,0
"""Use a more detailed alert mask where possible  Closes #9547""",https://github.com/qbittorrent/qBittorrent/commit/2f1a0ffe5c3e01a1903809106df7156e86a22201,1,0
"""[analyzer] Bump down the max size of functions being analyzed.  With the new setting, we are not going to inline any functions that are more than 50 basic blocks. (The analyzer is 20% faster on several especially bad benchmarks with the new default.)  git-svn-id: https://llvm.org/svn/llvm-project/cfe/trunk@171891 91177308-0d34-0410-b5e6-96231b3b80d8""",https://github.com/llvm-mirror/clang/commit/41748f7d3ae36db1b1c52eaaf76631ed60c79c53,1,1
"""sceKernelFindModuleByName:Add delay for Fake module  Fix #13601""",https://github.com/hrydgard/ppsspp/commit/354d263ccf4cf8f3913433b1b6f7f534e497de82,1,0
"""RESTEASY-1261 Use queryStringEncoding for the fragment  Use queryStringEncoding instead of queryNameValueEncoding for encoding the fragment part of a URI""",https://github.com/resteasy/resteasy/commit/5253d962e1f8d4dfe4e8d15fd5e7f1ca32ec019b,0,0
"""8002169: TEST_BUG: compiler/7009359/Test7009359.java sometimes times out  Make the test less prone to timeout by reducing the amount of iteration and allowing main to be compiled""",https://github.com/JetBrains/JetBrainsRuntime/commit/851ae93451ecb3d3e6cfc16542a07113091a2ffc,0,0
"""[STATS] print Total_* stats on their own line  llvm-svn: 266633""",https://github.com/tonlabs/TVM-Compiler/commit/53eca5216e51bfd61238ad749f066463a1418b38,0,0
"""'Fix' property test by ignoring date cases. Is referenced by issue #132""",https://github.com/static-frame/static-frame/commit/2cda5f824ba56a082b3874a836c4a7c8c607d902,1,0
"""Wait 5 minutes after offroad before changing thresholds (#2113)""",https://github.com/eFiniLan/legacypilot/commit/4891d3787afa652f5cb83e13e33e8158a8f6f7aa,0,0
"""extract-word: Check for early bail out before inspecting separators  It's a pretty small optimization but doesn't hurt...  Tested with test-extract-word.""",https://github.com/systemd/systemd/commit/8372da448f3c738e0154d988538d497f7e2e1f83,1,1
"""python: prefer cv::Mat over cv::UMat in python binding""",https://github.com/opencv/opencv/commit/db3654ef51b156feab4f59c13f2ee41ca2ab9a85,1,1
"""device: optimize nm_manager_get_connection_iface()""",https://github.com/NetworkManager/NetworkManager/commit/e93abf0552cf67c7fac5af9d365a833e747192f5,1,1
"""make statistics and timing info print even if the JIT'd program calls exit instead of returning from main.  llvm-svn: 32414""",https://github.com/ykfre/BsodSurvivor/commit/6161452b67134a1913e164519f6bac6493771e2d,0,0
"""#5644 - fix issue editing contact on mobile app""",https://github.com/SORMAS-Foundation/SORMAS-Project/commit/b692df37993975be3ed7f20801bcfa81e4b18103,1,0
"""branch: use write_file_buf instead of write_file  If we already have a strbuf, then using write_file_buf is a little nicer to read (no wondering whether ""%s"" will eat your NULs), and it's more efficient (no extra formatting step).  We don't care about the newline magic of write_file(), as we have our own multi-line content.  Signed-off-by: Jeff King <peff@peff.net> Signed-off-by: Junio C Hamano <gitster@pobox.com>""",https://github.com/git/git/commit/7eb6e10c9d7f43913615667740d1b22055cfba1f,1,1
"""search.py: use 'number' type for ID column""",https://github.com/nicotine-plus/nicotine-plus/commit/e39e0d37e58c202ddf3bab968da2d77fb49267e6,0,0
"""fix: activate optuna for lgbm_array iff horizon < 10""",https://github.com/mindsdb/lightwood/commit/f4449086b19f018d3c5d5fb8741fa8ecf6b50d1b,1,0
"""Don't put addresses into queue  - attempt to fix #1598 - seems to work - addresses won't be uploaded/announced anymore other than after connecting,   Later I need to find out how to announce them without causing problems, but   for the time disabling this seems an acceptable drawback""",https://github.com/Bitmessage/PyBitmessage/commit/11bec55be56e73502fbd569bf0327a8876b54315,1,0
"""Switch to using logger instead of a print statement""",https://github.com/sunpy/sunpy/commit/242bd9d9a847f65d6be4583341411ecc0bb8e0d7,0,0
"""shortlog: optimize ""--summary"" mode  If the user asked us only to show counts for each author, rather than the individual summary lines, then there is no point in us generating the summaries only to throw them away. With this patch, I measured the following speedup for ""git shortlog -ns HEAD"" on linux.git (best-of-five):    [before]   real    0m5.644s   user    0m5.472s   sys     0m0.176s    [after]   real    0m5.257s   user    0m5.104s   sys     0m0.156s  That's only ~7%, but it's so easy to do, there's no good reason not to. We don't have to touch any downstream code, since we already fill in the magic string ""<none>"" to handle commits without a message.  Signed-off-by: Jeff King <peff@peff.net> Signed-off-by: Junio C Hamano <gitster@pobox.com>""",https://github.com/git/git/commit/4e1d1a2eea25878a2128e376bff8b4a1b2216b15,1,1
"""k/topic_utils: do not return an error when waiting for leaders failed  Recently introduced change (waiting for leaders before returning from create topics) change the behavior of `CreateTopicsRequest` handler. Previously handler was waiting for topic partitions to be created but even if that timed out it returned success to the client. Waiting for leaders threw an exception when timeout was trigger which caused client connection to be dropped.  Fixed an error by going back to previous behavior i.e. ignoring waiting timeouts. The timeout does not indicate that topic creation failed actually when waiting for creation topic already exists.  Fixes: #7942  Signed-off-by: Michal Maslanka <michal@redpanda.com>""",https://github.com/redpanda-data/redpanda/commit/666085351618ea56365661c47af7c97fd959bfd0,1,0
"""Replaced pow with a multiply""",https://github.com/astropy/astropy/commit/752887c906ebc093c2b67474feb8e0b496887beb,1,1
"""Use io.BytesIO rather than io.StringIO since we are working with bytearrays now.""",https://github.com/Formlabs/OpenFL/commit/4c337640fadb477ccf9e988d286d914341c6f0d5,0,0
"""Fix burning CPU with udev disabled on Flatpak  Fixes #67355.""",https://github.com/godotengine/godot/commit/0cbd1c85a96384ef93978661e408ce7c1b721847,1,0
"""feat: Add 5 minute time limit to tasks""",https://github.com/getsentry/zeus/commit/02769a588debec80db2a303d94516d7b1660cd48,0,0
"""util: optimize free_and_strdup() if NOP  Under the assumption that strcmp() is cheaper than memory allocation, let's avoid the allocation, if the new value is identical to the old.""",https://github.com/systemd/systemd/commit/4b64536ee7fd0438c93d1784824098f826cd642c,1,1
"""cgroup-util: check unified_cache before invoking streq()  Just a minor optimization.""",https://github.com/systemd/systemd/commit/fc9ae7178e1462377b272a14b1a763d480ab0980,1,1
"""Update NodePaths only in built-in resources""",https://github.com/godotengine/godot/commit/77879d4288443fcacb0668bd867438b53bd800ae,1,1
"""libnm-util: optimize nm_utils_hwaddr_ntoa_len()  Signed-off-by: Thomas Haller <thaller@redhat.com>""",https://github.com/NetworkManager/NetworkManager/commit/fedf7ca3034ed3708b8fb11d14e3e33b04bf28eb,1,1
"""allowing as many frames as wanted, no 200 lock""",https://github.com/deforum-art/sd-webui-deforum/commit/601332c0f8f0ed3135fda609c7102f4f4c302273,0,0
"""hashmap: optimize set_put_strdup() a bit  Hashing should be quicker than allocating, hence let's first check if the string already exists and only then allocate a new copy for it.""",https://github.com/systemd/systemd/commit/454f0f8680ebbded135e8575b4d9615b427fdf76,1,1
"""Replace try-import-catch with a call to is_module""",https://github.com/betsee/betse/commit/040eb3ee6cdd999acdf1f16c16002645fed2b84e,0,0
"""chore: warning only in debug mode  仅仅在debug时打印警告日志  Log: Influence: log""",https://github.com/linuxdeepin/dtkcore/commit/d1082f01a15bcf7cd0d9d97d287fe853f950c506,0,0
"""#12256 - [Users] Loop of loading when updating the user role of a specific user""",https://github.com/SORMAS-Foundation/SORMAS-Project/commit/d3e0466c9309d56fc39b52d529a3754a5c249dfd,1,0
"""rptest/scale_tests: limit producer rate in test""",https://github.com/redpanda-data/redpanda/commit/074e634a856dbcb45132d41a470d33f9922d6a2d,1,0
"""Extend time after which the version checking will happen on startup""",https://github.com/open-stage/blender-dmx/commit/15c97f494084da745802f47438ecf56bd36bd613,0,0
"""[tls] only load default locations if they are defined""",https://github.com/aiortc/aioquic/commit/6fb4999fd6adf92135915f869d0f20cf1e63ccb8,0,0
"""fileio: try to read one byte too much in read_full_stream()  Let's read one byte more than the file size we read from stat() on the first fread() invocation. That way, the first read() will already be short and indicate eof to fread().  This is a minor optimization, and replaces #3908.""",https://github.com/systemd/systemd/commit/ff0e7e05c9904b4120868e96216b123c1b798aa4,1,1
"""[AST] hasAttr followed by getAttr isn't efficient  Just use getAttr because we are interested in the attribute's contents.  git-svn-id: https://llvm.org/svn/llvm-project/cfe/trunk@237336 91177308-0d34-0410-b5e6-96231b3b80d8""",https://github.com/llvm-mirror/clang/commit/575c8ea65c2a5212d95e9881f8a2aac27315dd53,1,1
"""truncateSpectrum function improved  Now works for very small slices and/or small arrays""",https://github.com/nanophotonics/nplab/commit/097923350474b1a2143a2d3a9a6fb809bfda9044,0,0
"""wait three seconds between canteens in a list""",https://github.com/ekeih/OmNomNom/commit/cef6a313b1454ab920cbf9696298b53e881ae2c3,0,0
"""Optimizing gmpe_table._get_mean""",https://github.com/gem/oq-engine/commit/37c2e86bd0821960318310771d6d7f824b33c7e5,1,1
"""use LogNorm from mpl instead of astropys LogStretch (#186)""",https://github.com/lightkurve/lightkurve/commit/dd47faed24c60edacaa41986411999d24abf5a48,0,0
"""remove +1 from size that was cutting off first char of copied files when a recursive dir""",https://github.com/ansible/ansible/commit/17060f984977b59336a224858f7149d98350ad2c,0,0
"""auth-manager: emit signal by ID  It's more efficient, as it saves a lookup by name. Also, it's more idiomatic to do it this way. I didn't find where the signal gets emitted at first, because usually we don't emit by name.""",https://github.com/NetworkManager/NetworkManager/commit/f8b74e19ea1e01781d22fccc6e96129d88e6814e,1,1
"""optimize: save inspection of already-inspected data  this is just a small improvement, but let's get the benefit ;)""",https://github.com/rsyslog/rsyslog/commit/beed1bda6969b70b608ff9e606f52ac6d41cc8c1,1,1
"""perf(core): make sympify faster for Basic subclasses.  The behaviour of sympify was changed in    https://github.com/sympy/sympy/pull/20128  so that sympifying a Basic subclass would be an error when strict=True. That change made the codepath for calling e.g. _sympify(Basic) slower as more checks would be done before returning. This commit adds an early raise for the case of calling _sympify(a) where a is a Basic subclass.""",https://github.com/sympy/sympy/commit/f7cecfea016dedf7ad042be0c8da9df1ef19c756,1,1
"""optimize: iscntrl() seems to be surprisingly slow  at least so tells the profiler...""",https://github.com/rsyslog/rsyslog/commit/49d1203b3582f7d637af11a226386a4df186e687,1,1
"""Corrected urban features logging when elapsed time > 24hrs""",https://github.com/lgervasoni/urbansprawl/commit/1e13d3917645f10cb2d8ad3c0a6cb97da8a87e7e,0,0
"""search results fix for user id (second)""",https://github.com/rosedu/wouso/commit/be1985b89c4d27ce64c3bbde98d0b1f0ad20d40a,0,0
"""Stop UDPSocket on socket.error 101 (Network is unreachable)""",https://github.com/Bitmessage/PyBitmessage/commit/03316496b7c3380c5ac408f86d049855dbcedac6,1,0
"""optimize: use built-in str comparison, as this is optimized in assembly  do only when possible. However, the profiler only shows as *very* minimal effect.""",https://github.com/rsyslog/rsyslog/commit/eb97d25219a279daceca29c08e68c864b5629901,1,1
"""log: do not free parents when walking reflog  When we're doing a reflog walk (instead of walking the actual parent pointers), we may see commits multiple times. For this reason, we hold on to the commit buffer for each commit rather than freeing it after we've showed the commit.  We should do the same for the parent list. Right now this is just a minor optimization. But once we refactor how reflog walks are performed, keeping the parents will avoid confusing us the second time we see the commit.  Signed-off-by: Jeff King <peff@peff.net> Signed-off-by: Junio C Hamano <gitster@pobox.com>""",https://github.com/git/git/commit/f35650dff6a4500e317803165b13cc087f48ee85,1,1
"""Correctly connect 'continue' and 'break' statements in Objective-C fast enumeration for blocks to the appropriate basic blocks.  llvm-svn: 59226""",https://github.com/tonlabs/TVM-Compiler/commit/1516dc075a58bf5b28c9b3660c344e67827040b2,0,0
"""Bug 1237714.  Make nsContentUtils::IsCustomElementName faster in the common case of a non-custom-element name.  r=smaug""",https://github.com/mozilla/gecko-dev/commit/19d13525ebc7839243866b0252b51d57088fa174,1,1
"""Increase UNIX socket backlog for performance under heavy load""",https://github.com/rsyslog/rsyslog/commit/f3106c538f04ada7d1d0b1d1117d8930b0ce12d0,1,1
"""avoid putting un-needed vars on chain stack and place them on nochain stack to reduce chain calls""",https://github.com/stan-dev/math/commit/75bcadb96cc061cf3dea20c68c5847bbdc09a3ce,1,1
"""Remove extra vision transform that is no longer needed""",https://github.com/RPTools/maptool/commit/0fd4d1e1451dc0244360cba44830787ec04b7696,1,0
"""Ignore tile URL sharding  The source returns sharded tile URLs, but sharding doesn’t buy us anything on native platforms, so always grab the first.  ref mapbox/mapbox-gl-native#2007""",https://github.com/mapbox/mapbox-gl-native/commit/bea457697a550392971c143071296e0d26a09fb4,1,0
"""Show silent mode toast immediately, and for 3.5 seconds instead of 2.""",https://github.com/TaintDroid/android_platform_frameworks_base/commit/36a64148b4efc246384e2010e5d0a37f16dbbd01,0,0
"""libnm: optimize nm_simple_connection_new_clone() to not needlessly set the path  Server never sets the path, so this is entirely unused server-side. Also NMConnection is a glib interface and stores it's private date in the GObject's data. It's less efficient to look it up. Just avoid it.""",https://github.com/NetworkManager/NetworkManager/commit/de5d07392da488113c956fbf1aca94fa280c3302,1,1
"""avoid divide by 0 in normalisation of zero length array""",https://github.com/openimaj/openimaj/commit/73f955bf9b64c44e601efd4403c92e6afa0174e4,0,0
"""add elapsed time to parse the OSM file""",https://github.com/3liz/QuickOSM/commit/acb2682bf3cf4a670d1aa62e9fc5a5371b8c71e3,0,0
"""dvc: optmize PathInfo.isin()  Should help with #2203""",https://github.com/iterative/dvc/commit/c4836b4578f59a0923be5655259a11538ca193fc,1,1
"""cleanup: || instead of |  More efficient with same result here.""",https://github.com/lvmteam/lvm2/commit/5577f2f4f0a5518662b9cedb6a373ccb67a71917,1,1
"""Fix for #1056""",https://github.com/aol/cyclops/commit/2ccc16aa8d87c73e96420d7410d435655ab013e7,1,0
"""Bug 1119089. Switch from the ineffecient x = x.sub(x, y) to x.subout(y);  The recently added move assignment operators make the existing pattern more efficient, but using SubOut() is cleaner and even more efficient.  --HG-- extra : rebase_source : 14ba52bfde0a4a591ca39b92d86632206bbe13eb""",https://github.com/mozilla/gecko-dev/commit/3a3d9ab7f782990d2cde6876fe1d1c1ae6378e66,1,1
"""Add exactly 1 second to blpop timeout. #565""",https://github.com/redisson/redisson/commit/86f7ee28e88dddd81b50d06744ad3aee8914141b,0,0
"""Change timer to return elapsed in milliseconds""",https://github.com/srcML/srcML/commit/9494696255849f7b581faa58d6da3b42559af082,0,0
"""improve json variable performance  We use libfastjson's alternative hash function, which has been proven to be much faster than the default one (which stems back to libjson-c). This should bring an overall performance improvement for all operations involving variable processing.  closes https://github.com/rsyslog/rsyslog/issues/848""",https://github.com/rsyslog/rsyslog/commit/69e1be41ac23b429d841f6b7de49c0de03e108e3,1,1
"""optimize: re-use already computed value!""",https://github.com/rsyslog/rsyslog/commit/855b68e1be652b4c51052969a9550d33b2aec612,1,1
"""SCons: Disable misbehaving MSVC incremental linking  Fixes #77968.""",https://github.com/godotengine/godot/commit/bc1aef88eef7bb09d1c537bf150414c50abfa374,1,0
"""delay 5ms after noticing the user has a queued message before returning it in case other messages arrive immediately thereafter""",https://github.com/ajanata/PretendYoureXyzzy/commit/dbb802bb2836639346bb9034d658ecd13a005a6a,0,0
"""fsmonitor: force index write after full scan  fsmonitor currently only flags the index as dirty if the extension is being added or removed. This is a performance optimization that recognizes you can stat() a lot of files in less time than it takes to write out an updated index.  This patch makes a small enhancement and flags the index dirty if we end up having to stat() all files and scan the entire working directory.  The assumption being that must be expensive or you would not have turned on the feature.  Signed-off-by: Ben Peart <benpeart@microsoft.com> Signed-off-by: Junio C Hamano <gitster@pobox.com>""",https://github.com/git/git/commit/ca598d5f2ab988935a5b882b44122cbfa5fd99f5,1,1
"""Hash mechanism for search filenames in cache (#40)""",https://github.com/pybliometrics-dev/pybliometrics/commit/7571b026f765fba3b558a9a55f71305ac8becc06,0,0
"""fix hashjoin debug code condition""",https://github.com/ClickHouse/ClickHouse/commit/6c8fc4cd11966cb96571fe3a2dfaac6b82cbd03c,1,0
"""dmeventd: time scaling for status retry  In normal case it's too slow to wait 1 second for default. So rather start with short time and increase sleep between status retesting.""",https://github.com/lvmteam/lvm2/commit/0dc73f7dbd49308b1864444d1decfaf8e10d2d81,1,0
"""Limit scale amount for button bar  -- this helps with low res screens""",https://github.com/eswartz/emul/commit/625aad49b6c434f5cb5673abd73b0d0e2a0f4a03,0,0
"""device: optimize hashtable usage for shared_ips  No point ins storing ""TRUE"" as value in the @shared_ips hash table. That forces glib to allocate a separate storage for the value. Just use g_hash_table_add() instead.""",https://github.com/NetworkManager/NetworkManager/commit/60cc501a665ad7fcfedcdba37557860458dca9a9,1,1
"""Issue: 1415 Fixed file uploads > 128k""",https://github.com/zaproxy/zaproxy/commit/d8530b229d8a7e14f49e091f2129c45c4a77d2a0,0,0
"""Avoid quadratic behavior when accumulating stickies.  When plotting 10000 lines, this gives a ~10% improvement in performance.""",https://github.com/matplotlib/matplotlib/commit/1e32084fccdd8e027790a5afe0680a87454f5f89,1,1
"""Updated threshold for adjusting resolution from 1000 to 100000""",https://github.com/lilab-bcb/pegasus/commit/ea71f48ca1083d9baaf963d9743f05d9e372ad9c,0,0
"""CORS: cache OPT requests  #3474""",https://github.com/finos/waltz/commit/9533421c3825e6d3fbc3717a5d57b92b5af369cf,1,0
"""Bug 1289165 - Apply the optimizations in moveDenseElements to unboxed objects; r=sfink""",https://github.com/mozilla/gecko-dev/commit/0391a5005094db4ee2e4c9fcd2529528ce428389,1,1
"""FunctionAttrs: Skip it if the effective SCC (ignoring optnone functions) is empty  Minor optimization but mostly simplifies my debugging so I'm not dealing with empty SCCNodeSets while investigating issues in this optimization.  git-svn-id: https://llvm.org/svn/llvm-project/llvm/trunk@304597 91177308-0d34-0410-b5e6-96231b3b80d8""",https://github.com/llvm-mirror/llvm/commit/ffc893deb7106ee0c541b44ef41506a32e1e8350,1,1
"""sd-ipv4ll: speed up bind() in the same way as for dhcp""",https://github.com/systemd/systemd/commit/bcf3ce7b39529eb5421aa45d6336c9b12f8594c0,1,1
"""avoid charset problem in MySQL by sidestepping""",https://github.com/sfu-fas/coursys/commit/2862eede07f0f1ffcf9fd7cceea1a9d5218c6d42,0,0
"""Fix unnecessary break when calculating the height of visible lines  This break causes the minsize to be smaller than expected, and then the size keeps increasing by one line to cover all visible lines. This can cause performance issues when there are many visible lines.""",https://github.com/godotengine/godot/commit/e5bebbc9ffda8b4fa5a786842ea24f0a3ea0763a,1,1
"""it has just been one of those nights!""",https://github.com/openSUSE/salt/commit/873bd7d143e7176f306488a14c478e3a7964a9b6,0,0
"""Make the split function use StringRef::split.  llvm-svn: 208723""",https://github.com/plctlab/llvm-project/commit/addf51ddde4f06a471b3c40ef8300d6c88919185,0,0
"""perf(Scheduling): add jitter to job scheduling  Addresses #19007""",https://github.com/frappe/frappe/commit/aeec01c7f933615c126fd7b6a1a832c54f8d230a,1,1
"""slightly optimize very short queries with LowCardinality""",https://github.com/ClickHouse/ClickHouse/commit/eeb78bf29172112ee832e2e46ed75271961717d9,1,1
"""Disable a prohibitively slow code branch when reparenting nodes""",https://github.com/godotengine/godot/commit/3a67eb26754d779b308d478e92b5d12252c70a5a,1,1
"""[objc-gnustep2] Use isalnum instead of a less efficient and nonportable equivalent.  Patch by Hans Wennborg!  git-svn-id: https://llvm.org/svn/llvm-project/cfe/trunk@332964 91177308-0d34-0410-b5e6-96231b3b80d8""",https://github.com/llvm-mirror/clang/commit/007983114f448135906abddea70250d463fcd13a,1,1
"""Multiblock corrupted pointer fix  OpenSSL 1.0.2 introduced the ""multiblock"" performance improvement. This feature only applies on 64 bit x86 architecture platforms that support AES NI instructions. A defect in the implementation of ""multiblock"" can cause OpenSSL's internal write buffer to become incorrectly set to NULL when using non-blocking IO. Typically, when the user application is using a socket BIO for writing, this will only result in a failed connection. However if some other BIO is used then it is likely that a segmentation fault will be triggered, thus enabling a potential DoS attack.  CVE-2015-0290  Reviewed-by: Richard Levitte <levitte@openssl.org> Reviewed-by: Andy Polyakov <appro@openssl.org>""",https://github.com/openssl/openssl/commit/1d2a18dc5a3b3363e17db5af8b6b0273856ac077,1,1
"""[cv::transform] Enable CV_SIMD for the 16U case on AArch64.""",https://github.com/opencv/opencv/commit/c526705f4f72fbd5720fb739ae7f01eb2d45d7b4,1,0
"""Removed dead variable ""hadError"" in ParseReturnStmt.  llvm-svn: 41079""",https://github.com/tonlabs/TVM-Compiler/commit/c48affb81f979a9eb554208bd63a978228928b4c,0,0
"""LivePhysRegs: Follow-up to r303937  We may have situations in which a superregister is reserved and not added to liveins, so we have to add the subregisters.  llvm-svn: 303949""",https://github.com/hfinkel/llvm-project-cxxjit/commit/daea6f1e8496bb72fe6455b650f65952f2461f34,0,0
"""Log forecast.io API calls / response time""",https://github.com/M66B/BackPackTrackII/commit/b94ec8f6216ae6f2a45d5487534e80905ed1eda9,0,0
"""Minor optimization to r177367 to treat a module with missing dependencies as out-of-date rather than missing.   git-svn-id: https://llvm.org/svn/llvm-project/cfe/trunk@177369 91177308-0d34-0410-b5e6-96231b3b80d8""",https://github.com/llvm-mirror/clang/commit/ac39f135ea0d45bc37d1154fa8380d46aac0547d,1,0
"""#12256 - [Users] Loop of loading when updating the user role of a specific user""",https://github.com/SORMAS-Foundation/SORMAS-Project/commit/31e1c111c766308e74e1f04d3e4e8ead3840bbdc,1,0
"""100 epoch resnet training run repetitions [3, 3, 3, 3] initial_filters 96""",https://github.com/jhu-lcsr/costar_plan/commit/316342f745cb1b3d45f6f63372071d092bd71b73,0,0
"""Fix volumetric fog memory leak on resize""",https://github.com/godotengine/godot/commit/ba431a9306f6f018488b6d19854ea40fa528f205,1,0
"""Replace use of SmallVector::back + pop_back with pop_back_val  I ran across an instance where the value was being loaded out via back, then immediately popped.  Since pop_back_val is more efficient at this (it moves out), replace this  instance.   git-svn-id: https://llvm.org/svn/llvm-project/cfe/trunk@316015 91177308-0d34-0410-b5e6-96231b3b80d8""",https://github.com/llvm-mirror/clang/commit/f78232dcbf734a1c7e42ae60b58c9bbe14b64516,1,1
"""MINOR: minor performance and readability improvement for logging""",https://github.com/microsoft/kafka-connect-cosmosdb/commit/768cbc5d9363a09ce95995607d504d69a968d1ac,1,1
"""refs: use skip_prefix() in ref_is_hidden()  This is shorter, makes the logic a bit easier to follow, and is perhaps a bit faster too.  The logic is to make the final decision only when ""subject"" is there, its early part matches ""match"", and the match is at the slash boundary (or the whole thing).  Signed-off-by: Christian Couder <chriscool@tuxfamily.org> Reviewed-by: Jeff King <peff@peff.net> Signed-off-by: Junio C Hamano <gitster@pobox.com>""",https://github.com/git/git/commit/7a40a95eb4f79517750eb2bcd81342c25c6db406,1,1
"""openssl enc: Don't unbuffer stdin   - unbuffer causes single-byte reads from stdin and poor performance  Fixes #3281 CLA: trivial  Reviewed-by: Rich Salz <rsalz@openssl.org> Reviewed-by: Richard Levitte <levitte@openssl.org> (Merged from https://github.com/openssl/openssl/pull/3299)""",https://github.com/openssl/openssl/commit/65d62488b8c808350f440d2276034f5223b391ad,1,1
"""use the Python ternary operator for lulc_time. see #BITBUCKET-3798""",https://github.com/natcap/invest/commit/ed86f3d779d9565f823334dc037e19d2f50dc145,0,0
"""Better message when test_states fails due to slow autoreload""",https://github.com/cherrypy/cheroot/commit/9f94ba37e739a25ad531cca8ca0030352d8fa484,0,0
"""Special case degree-1 Bezier curves.  This greatly speeds up extent computation for the common case of polylines.  (We were previously only special-casing the degree-0 case.)""",https://github.com/matplotlib/matplotlib/commit/1e6352ab60409d936c8073343329abf3ebbe750b,1,1
"""Add a simpler version of is_regular_file.  llvm-svn: 184764""",https://github.com/tonlabs/TVM-Compiler/commit/eb23add2ad0426edabf8221f60627af086b7b980,0,0
"""fs-util: add shortcut for chase_symlinks() when it is called like open(O_PATH)  Let's optimize things, and let the kernel chase the paths if none of the features chase_symlinks() offers are actually used.""",https://github.com/systemd/systemd/commit/244d2f07b49e3470d679fdd0f6ebd24fac8d5dc7,1,1
"""dir.c: avoid stat() in valid_cached_dir()  stat() may follow a symlink and return stat data of the link's target instead of the link itself. We are concerned about the link itself.  It's kind of hard to demonstrate the bug. I think when path->buf is a symlink, we most likely find that its target's stat data does not match our cached one, which means we ignore the cache and fall back to slow path.  This is performance issue, not correctness (though we could still catch it by verifying test-dump-untracked-cache. The less unlikely case is, link target stat data matches the cached version and we incorrectly go fast path, ignoring real data on disk. A test for this may involve manipulating stat data, which may be not portable.  Signed-off-by: Nguyễn Thái Ngọc Duy <pclouds@gmail.com> Signed-off-by: Junio C Hamano <gitster@pobox.com>""",https://github.com/git/git/commit/2523c4be855af84460e70ab5c8375534f8cefed5,1,1
"""fix: last uploaded for components over time (#511)""",https://github.com/codecov/codecov-api/commit/e4f121f6be2a780e70b7170b1330497e0caf6ec4,0,0
"""teachers with ASC category have 1.5 credits for 1 hour.""",https://github.com/FenixEdu/fenixedu-academic/commit/878ada650ac2dee055dc10e8805e31d141c945fb,0,0
"""Added YUV conversion fix  Fixed OpenCV issue #18878""",https://github.com/opencv/opencv/commit/3bc1b5396258a85c6b3078b176cab3f7c8210c3a,1,0
"""HBASE-19445 PerformanceEvaluation NPE processing split policy option""",https://github.com/apache/hbase/commit/3e7b90ac6d808c171ea988d8d32ef998146713ac,0,0
"""less status log spam in cqhttp bot""",https://github.com/TISUnion/ChatBridge/commit/929d48ffdec18853741f44d3d70a34eafeb464fe,0,0
"""rev-list: disable object/refname ambiguity check with --stdin  This is the ""rev-list"" analogue to 25fba78 (cat-file: disable object/refname ambiguity check for batch mode, 2013-07-12).  Like cat-file, ""rev-list --stdin"" may read a large number of sha1 object names, and the warning check introduces a significant slow-down.  Signed-off-by: Jeff King <peff@peff.net> Signed-off-by: Junio C Hamano <gitster@pobox.com>""",https://github.com/git/git/commit/4c30d50402c17d2569151820b92cea110ad1d240,1,1
"""resolved: Recover from slow DNS responses  When DNS is unreliable temporarily, the current implementation will never improve resend behavior again and switch DNS servers only late (current maximum timeout is 5 seconds).  We can improve this by biasing the resend_timeout back to the current RTT when a successful response was received. Next time, a timeout is hit on this server, it will switch to the next server faster.  Fixes: #5953""",https://github.com/systemd/systemd/commit/496ae8c84b2d3622bc767a727e3582e2b6bcffcd,1,1
"""#6204 - reduce non needed complexity for all queries that use event user filter with health facility user""",https://github.com/SORMAS-Foundation/SORMAS-Project/commit/5752ebd20a0c9e308984349c1382c696fb0e365d,1,0
"""Corrected time computation (-1 time step) for ANNarchy interfaces""",https://github.com/the-virtual-brain/tvb-multiscale/commit/fffaff3a5a41167c30d222ad3d005f3d7e5f3493,0,0
"""Small optimization: once the size is know, we don't have to call fillCurWord.  git-svn-id: https://llvm.org/svn/llvm-project/llvm/trunk@221891 91177308-0d34-0410-b5e6-96231b3b80d8""",https://github.com/llvm-mirror/llvm/commit/a9fbbb48bcc56354681fc2ead593a9861bfec699,1,1
"""process-util: trivial optimization""",https://github.com/systemd/systemd/commit/a6149b93afeb4e7b37e1313920ac2e0a91ff1c08,1,1
"""Circular range query of point k-D trees""",https://github.com/gisalgs/indexing/commit/eab148f7f6aa5e52e212014521a030109383a3c6,0,0
"""Avoid using regular expressions for string replacement""",https://github.com/trinodb/trino/commit/f49b3205de5705a082efaebce246ff3da2589171,0,0
"""optimize: another round of removing isdigit()""",https://github.com/rsyslog/rsyslog/commit/123143d0f1f5e99b04f963c5d785a8f8918decdc,1,1
"""#9054 added missing null check""",https://github.com/SORMAS-Foundation/SORMAS-Project/commit/0386b83f646e78828e86cbc066c0835e238f499a,1,0
"""bugfix: imudp could do 0-size calloc if no listeners are active at late stage  This was found by clang static analyzer and is extremely unlikely to happen in practice, due to checks in earlier stages. But we did not investigate that in detail but rather add checks to be on the safe side. Note that this is not performance critical as it happens just on startup.""",https://github.com/rsyslog/rsyslog/commit/b9dcd4e434265821695865e18e9ca14fdc51c3f1,1,0
"""Remove unnecessary vector copy  Temporary matrices being used in `find_path` method are attempted to be copied into ObiWarp's class matrices at the end. But these matrices themselves are not being used anywhere else. The copy operation was causing a crash due to attempts to free unallocated memory. The copy operations have been removed to prevent this crash.  Issue: #859""",https://github.com/ElucidataInc/ElMaven/commit/b4583dbb174a13617ff592a4599a099dd3389519,1,1
"""Remove a useless debug message in filetransfer.cc  Remove the `verify TLS: Nix CA file = 'blah'` message that Nix used to print when fetching anything as it's both useless (`libcurl` prints the same info in its logs) and misleading (gives the impression that a new TLS connection is being established which might not be the case because of multiplexing. See #7011 )""",https://github.com/NixOS/nix/commit/0f977bf91e29192d7f0c0f9cad16351bad7cd137,1,0
"""emcee: vectorize sampling since all ln_pdfs accept numpy arrays""",https://github.com/GeoStat-Framework/GSTools/commit/c88f7bab0e309f7a32c1a61786ba340245d215a2,1,1
"""[Editor] Prevent unnecessary editor theme regeneration on unrelated system setting update.""",https://github.com/godotengine/godot/commit/97085358ce154f34d6ab571c35529a8b0e063513,1,0
"""Fix 3D sky update performance regression""",https://github.com/godotengine/godot/commit/66d27df12f5b710ac5f569144944c1db0c86c96b,1,1
"""Fixed misprint making counting the ruptures ultra-slow in event_based""",https://github.com/gem/oq-engine/commit/be813aa4a76c3689f45aca18c7b93aa64a446c0b,1,0
"""_gcry_burn_stack: use memset for clearing memory  * src/misc.c (__gcry_burn_stack) [HAVE_VLA]: Use 'memset' for clearing stack. --  Patch switches stacking burning to use faster memset instead of wipememory. Memset is accessed through volatile function pointer, so that compiler will not optimize away the call.  Signed-off-by: Jussi Kivilinna <jussi.kivilinna@iki.fi>""",https://github.com/gpg/libgcrypt/commit/3841b23c0ccb24d555b7570083bba958e3126d26,1,1
"""Modify wrapper for doubling time to return the doubling coordinates as an astropy.Time instead of an astropy.units.Quanity""",https://github.com/gammapy/gammapy/commit/a12b15dc5195a5b329c68478fc50026e556d7945,0,0
"""bus-proxyd: optimize replies if they're not requested  If a caller does not request a reply, dont send it. This skips message creation and speeds up NO_REPLY_EXPECTED cases. Note that sd-bus still handles this case internally, but if we handle it in bus-proxyd, we can skip the whole message creation step.""",https://github.com/systemd/systemd/commit/426bb5ddb8ff122d3e08b0480466718b68485e70,1,1
"""Turn off physics and 3d navigation servers in the Project Manager.  Copying the editor behaviour of deactivating these servers we're not using, to reduce CPU load.""",https://github.com/godotengine/godot/commit/27a6ab457b15e448147ab97ab6b23e835ac9e741,1,1
"""Disable sticky edge accumulation if no autoscaling.  If there's no margin to be added, we don't need sticky edges, but if autoscaling is off, we _also_ don't need the sticky edges. This saves a lot of time when plotting many artists, like in #12542.""",https://github.com/matplotlib/matplotlib/commit/318a5894fd4958ce9cdaaed9ac81e1143cbc37a6,1,0
"""[bunkr] use 'media-files' servers for m4v and mov files (#2925)""",https://github.com/mikf/gallery-dl/commit/d29fb940982e0b8def3cfe8583eae7276f807c83,0,0
"""cancel merges before acquiring lock for truncate""",https://github.com/ClickHouse/ClickHouse/commit/3e700e854d6a1620bf80da5340206e1ec691b22a,1,0
"""Bug 925088 - SpiderMonkey: Micro-optimize x64's testStringTruthy. r=mjrosen""",https://github.com/mozilla/gecko-dev/commit/783e661627ee82083e5f2a71668ade7633dfb897,1,0
"""kafka: Disable use of separate fetch scheduling group  This partially reverts 9a93a9c22238e145dfa9d7fe297eb494d7c5f0bf  While the original motiviation isn't invalidated we have now found a counter example where the extra fetch groups makes things worse overall.  `ManyPartitionTest` fails on ARM with the extra group but passes without. With the group in use CPU util hits 100% and grinds everything to halt.  Fetch seems to be a lot slower on ARM. Hence, with the guaranteed share of the extra group the whole system gets affected and hits CPU limits.  Because this is incredibly hard to reason about and it wasn't the core fetch optimization we decided to revert back to keeping it disabled by default.  We still keep the option around as it might be useful potentially in corner cases.  Fixes https://github.com/redpanda-data/redpanda/issues/10507""",https://github.com/redpanda-data/redpanda/commit/6d1223d4e4b0489c0fade40a727b9633d506398a,1,1
"""use Ruby runtime's STDOUT instead of Java System.err""",https://github.com/jruby/jruby-openssl/commit/cdf525a4b567fbde8e5becfaf23936ae08db9aba,0,0
"""Add a special handling case for untyped CopyFromReg node in GetCostForDef() of ScheduleDAGRRList  llvm-svn: 173833""",https://github.com/ykfre/BsodSurvivor/commit/4a0b4fb9a519912bb0161371553e15b25e7c9c81,0,0
"""Removed a usage of Mob::DistNoRoot and used ComparativeDistance instead""",https://github.com/EQEmu/Server/commit/fa50ab8a18e36518f9caaa7f66bca8fb84e63332,0,0
"""Make the lifetime of the DICompileUnit we're constructing from the MDNode more clear as just for a single argument.  llvm-svn: 189294""",https://github.com/tonlabs/TVM-Compiler/commit/6b16b43ef95d2ffbad889601f26786ecdbd914b4,0,0
"""complicated the uid masking a little, avoiding to create a const larger than word size. This is relevant for generating interp-level. Well, maybe this could be avoided by generating long object calls instead of refusing.""",https://github.com/mozillazg/pypy/commit/b5b22d0e1b0adaaefc9f6b1e059f75ed01e290d1,0,0
"""Use longer text for burgerking menu to workaround the culling of too short menus""",https://github.com/ijanos/ebedke/commit/b2b49941c450848065c73342637b49a1906155e0,0,0
"""Correct delay time from 6 to 60 seconds""",https://github.com/netbox-community/netbox/commit/ae342a0506c627e3b23196ce49940b60b94f54f5,0,0
"""[storage] cache bugfix  - dbapi2 requires microsecond on timestamp, datetime.now() trims microsecond if exact to the second. - resolve by adding 1 microsecond to timestamp if timestamp has no microseconds""",https://github.com/Kolifanes/plugin.video.youtube/commit/d2d33d5de0903ad71f8db197d38685e095810544,0,0
"""added transmission duration approximation (manchester encoding, uart-extra-bit, 19.2kbps)""",https://github.com/contiki-ng/cooja/commit/eac0a61b2f9a7b6b9778a022a0118b54db813f19,0,0
"""hiero: fix - skip audio in collect effects""",https://github.com/ynput/OpenPype/commit/b04fc48fbc475f671c0876c6d05cfca79c6d95c0,0,0
"""Increase progressively the task retry duration up to 1 hour  issue11209 review385991002""",https://github.com/tryton/tryton/commit/0fbbe86928bb8c06b3a4c316be6aa69532cce812,0,0
"""benchdnn: rnn: add skip case for non-lstm""",https://github.com/oneapi-src/oneDNN/commit/448be8d93b5b8d957fa46b0580fb435368bce523,0,0
"""Increased NTP update frequency to 1024 seconds""",https://github.com/meshtastic/firmware/commit/7799e1b7e6a2ad219aa8da6e2ed4ec80e797dbbd,0,0
"""use element_identifier if possible  for collection input""",https://github.com/galaxyproject/galaxy/commit/3e2773b14506a64d7afa805afe9ff4164036dee7,0,0
"""Do run ComputeLiveOutVRegInfo with -fast.  llvm-svn: 52975""",https://github.com/tonlabs/TVM-Compiler/commit/33696cd9cf04286f658ab5cc647cb6a8385762d7,0,0
"""HSEARCH-3774 Pass the remaining time to ES request""",https://github.com/hibernate/hibernate-search/commit/9a105a2a1897983c56c8538d06650f6b3ebe7046,0,0
"""uses ENDS WITH for TR postprocess with subgroups""",https://github.com/graphaware/neo4j-nlp/commit/fe8f38c36da2393b350003e62d7f074e5fc6b10c,0,0
"""Increase mxs431 timeouts  The first timeouts don't appear to relate to the actual test but to preparing it. Due to this, they can be increased by a great amount.""",https://github.com/mariadb-corporation/MaxScale/commit/757ab3fd476c4e55cea38a5b2b71b3bfc4cbe933,0,0
"""Use subprocess instead of distro to check for Ubuntu presence (#56)""",https://github.com/kislyuk/aegea/commit/4dbc23605ecc05f129860e93af4e5dc27ce3385a,0,0
"""upgrade max model difference to 2e-2 (for transfo-xl adaptive softmax + inputs)""",https://github.com/cedrickchee/transformers-llama/commit/f6969cc12b90c8f6c76f4819ea5f2f2e909f70b3,0,0
"""[INDY-1165] Try to decrease testing time (#552)  * [INDY-1165] Added check, that proofs already received    * [INDY-1165] Remove retry timeout changing""",https://github.com/hyperledger/indy-plenum/commit/551d50a8d675615f1bfc3e104b9d692822f4b2ed,0,0
"""don't save system time on s390 (#867856)""",https://github.com/rhinstaller/anaconda/commit/8af279b5baa7fd39c2467f43bf8e8373dc8e2659,0,0
"""Change the threshold to use 3rd SDP""",https://github.com/ChaissonLab/LRA/commit/08f7de695954a416d40eb97551cba1361d317a1e,0,0
"""[analyzer] Add a comment that FunctionCodeRegions may also need canonicalization  llvm-svn: 353592""",https://github.com/hfinkel/llvm-project-cxxjit/commit/37625f348538b5698704f3e2114a6c74e8c496d8,0,0
"""Swipe refresh trigger distance increased to 100dp.""",https://github.com/AnonymousMessenger/AnonymousMessenger/commit/0d5b83f3ce6dd640482943f2922dfe6ad78389e8,0,0
"""Use default schedule for end of time condition""",https://github.com/M66B/FairEmail/commit/a7d59ba3cd530f21b454abf1644a1ded766cd6e6,0,0
"""1. Update the dependencies for fast N-1/2 CA.""",https://github.com/mzy2240/ESA/commit/5ea25b47fd6884ab374a62813b1350468e648d5d,0,0
"""pivos: [amcodec-hack] pvr can reopen too fast, slow us down a little""",https://github.com/koying/SPMC/commit/ba5bf6acfc7825c20dfc5f26c87abea892a021ce,0,0
"""Use the right cast kind when comparing null to member pointers.  llvm-svn: 79927""",https://github.com/intel/cm-compiler/commit/83133d9a74e9491a8ee22746d897213efbcc2da3,0,0
"""[clangd] Always remove dots before converting paths to URIs in symbol collector.  llvm-svn: 335458""",https://github.com/plctlab/llvm-project/commit/a095770a821cb93dc864a3ff33b801dc3c526a87,0,0
"""exec valgrind watcher to save a process""",https://github.com/COMP1511UNSW/dcc/commit/1f1b48745ff3470d7debf769c1787cd807b7856a,0,0
"""pybeam.beam_file: use open() instead of removed file()""",https://github.com/matwey/pybeam/commit/84b995f1421640e440bdd60544252d7a2589c4b1,0,0
"""Use NBTIngredient for the potion in generated tipped arrow recipes (#2666)""",https://github.com/mezz/JustEnoughItems/commit/22b3786d80055373e3b350eb7841ae0811529012,0,0
"""Lots of mobs in one area can cause players to move to fast in water.""",https://github.com/gravitylow/AntiCheat/commit/b08ae8e60be033ad734041dc0f8e0f220ee00bfa,0,0
"""Use smallint for BIT instead of byte to avoid conversion problems.""",https://github.com/squirrel-sql-client/squirrel-sql-code/commit/2791c916e1a4d1d8e7a47752701fdfebbf4a6cdc,0,0
"""Improved time formatting  Better time formatting when converting seconds into mm:ss""",https://github.com/Neferetheka/Helper-Tools-for-Android/commit/272c5925c6ceb693036aefe7f979d252f80d1937,0,0
"""Fixes incorrect number of milliseconds in 10 minutes""",https://github.com/mooshim/Mooshimeter-AndroidApp/commit/33ab879ab06a6977d5726ff45745bf71b8430e29,0,0
"""- Increased bin count for TDR for possible increased accuracy.""",https://github.com/NanoVNA-Saver/nanovna-saver/commit/c77b1370386142b1f9f6051d22429230ed52fafc,0,0
"""A minor simplication in the generated code.  llvm-svn: 40479""",https://github.com/ykfre/BsodSurvivor/commit/5a629d4cee40a08137e2e672061bd5242b3d5c99,0,0
"""Switching Stark F0 calc to TargetList instead of OpticalSystem""",https://github.com/dsavransky/EXOSIMS/commit/c96f595f930eaba08915c8a9b9eebc1396140647,0,0
"""shorten the action name if > 128 chars (bnc#675021)""",https://github.com/uyuni-project/uyuni/commit/3e264b114515534980c9d8caff8be18acfe873e2,0,0
"""Made fasterOptionInteractions off by default is it breaks Optifine""",https://github.com/jss2a98aj/BugTorch/commit/90ed63f9b64582fdf42158abe8f175a8e2b39f09,0,0
"""Booflo Power Bar now drains faster when the Booflo is grounded""",https://github.com/team-abnormals/endergetic/commit/2cc02b42634178746f11a4251ab6f96af57c70a0,0,0
"""fixing rate of check for long runs""",https://github.com/oci-pronghorn/Pronghorn/commit/3c357677bbf9953e4c42f45b7c1112fb84207f39,0,0
"""increase default prealloc to handle 2nd order hex by default""",https://github.com/live-clones/gmsh/commit/97a19bc2e794ac7e97f6ac6e71f2ccd0b893cb43,0,0
"""wait only if there are some unfilnished subtasks""",https://github.com/moold/ParallelTask/commit/c3926164af83c6ccc43a6103cd6ae57294077e5f,0,0
"""Add version of getMethodSummary() that can be used to query the summary for the method currently being analyzed.  llvm-svn: 70388""",https://github.com/ykfre/BsodSurvivor/commit/99fe1695c7146fe968acaba68261d3e2383103cd,0,0
"""Use localised string having gone to the bother of obtaining it.""",https://github.com/apache/tomcat/commit/60d16837686c8ca20103914d3e1c6223ee10113e,0,0
"""Only enable the ObjCAtSyncChecker when the translation unit uses Objective-C.  llvm-svn: 118414""",https://github.com/intel/cm-compiler/commit/14715b7f2f506350b0b69dc1f655229b48fd1341,0,0
"""Issue #245 - Set the connection and read timeout to 5min""",https://github.com/akvo/akvo-flow/commit/2b0c897eca5fad4af17ad823811dbac626591acc,0,0
"""Changed seed-range for platec-seeds to use numpy constant.""",https://github.com/Mindwerks/worldengine/commit/e9441209e9eda6749b239861a1f100488657c5ec,0,0
"""getting available balance from wallet instead of API call.""",https://github.com/robcaulk/freqai/commit/27a6dcf3fc13821006903573d330c06cecf9b169,0,0
"""Search by `patch.name` instead of `patch.version` in `Patch.from_str""",https://github.com/meraki-analytics/cassiopeia/commit/bbc0ff72282502fbb39a18d8e5eda4749a9faaef,0,0
"""Shorten server-side error messages if they exceed 200 chars""",https://github.com/MrStahlfelge/lightblocks/commit/28513ccb49632f0bb71d864ffdc2f88f19c0f021,0,0
"""increased min delay closing tool tip window""",https://github.com/Wisser/Jailer/commit/63275b2ba5203553dc51f533c40e59d4b83d0984,0,0
"""[JumpThreading] When processing compares, explicitly check that the result type is not a vector rather than check for it being an integer.  Compares always return a scalar integer or vector of integers. isIntegerTy returns false for vectors, but that's not completely obvious. So using isVectorTy is less confusing.  llvm-svn: 302198""",https://github.com/hfinkel/llvm-project-cxxjit/commit/1f673d4450a45c47ffd6ba7f017316e88b165829,0,0
"""Change the fromtime and untiltime to be datetime instead of epoch""",https://github.com/lincolnloop/salmon/commit/79f03ffa99f4dceb5d2d95262570e6d2162bfda0,0,0
"""src: dump isolate stats when process exits  When process exits, dump v8 isolate's internal stats for performance evaluation and debugging. It fixed the incorrect profiling log output when running V8's builtin PGO profiling for node.js service type application,which exits by user pressing CTRL+C etc. keys.  PR-URL: https://github.com/nodejs/node/pull/44534""",https://github.com/oracle/graaljs/commit/81ea507e8ef0e2ef39d2880c01c947620f04c17a,0,0
"""using urlForResourceNamed (otherwise we get file://... url)""",https://github.com/wocommunity/wonder/commit/a742d5633e0adec63d85c683e95b837aebbfef2b,0,0
"""Use generic timeout in Frames test  This gives more time and should be enough for the HUD and the frames to fully load, reducing failures.  Part of #344 - Make functional tests more reliable""",https://github.com/zaproxy/zap-hud/commit/fee0229ff0b0516b9bb420e6a871d267b8318f50,0,0
"""Time: 48 ms (86.27%), Space: 13.9 MB (68.98%) - LeetHub""",https://github.com/vinija/LeetCode/commit/b9a626e21b119e24412c2e5dd9b99fd833022a56,0,0
"""Make SlotIndex::getEntry() return unsigned to match IndexListEntry.  llvm-svn: 175600""",https://github.com/ykfre/BsodSurvivor/commit/26ef663c42660a74a025bbf6b7f316f3e37815cc,0,0
"""if Xcore doesn't support TLS, it doesn't have to worry about thread local LLVM IR, it should be rejected by a front-end.  llvm-svn: 76665""",https://github.com/intel/cm-compiler/commit/684d5fe95dc696916e58085aa95afe19402d1165,0,0
"""use Individual ID = Sample ID instead of Participant ID for now""",https://github.com/broadinstitute/seqr/commit/414b30453d8399362a2f9f5d3103e230feaab221,0,0
"""[Sparc] Tweak r255668: Use llvm_unreachable.  llvm-svn: 255698""",https://github.com/tonlabs/TVM-Compiler/commit/99fcb721b2cf21d16f8b195af05510e6b52d4102,0,0
"""CheriBSD tests: increase timeout for login prompt  Booting the purecap kernel with a purecap world is currently quite slow and we sometimes get timeouts in Jenkins.""",https://github.com/CTSRD-CHERI/cheribuild/commit/dce3ccf17a43a3423993203f287bc8e1d9d55595,0,0
"""[NewGVN] Prefer auto over explicit type. NFCI.  llvm-svn: 291328""",https://github.com/hfinkel/llvm-project-cxxjit/commit/1b97fc34a4727c8d8cc27b5637a5c36db3a3ef49,0,0
"""check the None case for input selection (#45)""",https://github.com/EthanJamesLew/AutoKoopman/commit/f349a07fc4ae5d5ca7a11aa0ada6d6a8457c7b54,0,0
"""remote: lower limit batch request size at integer levels""",https://github.com/gauteh/lieer/commit/94bbd276a1a0e15c2735c56f0ff8e1a957553e46,0,0
"""Output a very high-precision number  llvm-svn: 8856""",https://github.com/hfinkel/llvm-project-cxxjit/commit/9414782d68ed75cf0ff78ea7e963da5736947c66,0,0
"""Handle functions with multiple exit blocks properly.  llvm-svn: 37539""",https://github.com/intel/cm-compiler/commit/d184c18074b973fb77e1f4757af878b90857e783,0,0
"""use textwrap.fill() from stdlib to wrap long lines""",https://github.com/ilstam/FF-Multi-Converter/commit/01f9ecf49134a70563da39faadaea179999c70b8,0,0
"""33% chance for lich to jump on hit""",https://github.com/NYRDS/remixed-dungeon/commit/bc7278c6cf55298107448162935591935df0e924,0,0
"""Note why logging a large variant takes long compile: std::visit""",https://github.com/morganstanley/binlog/commit/616b9496adb29e4acb41fd456dfc9853e477dad1,0,0
