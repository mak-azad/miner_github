{"commit_url":"https://github.com/aol/cyclops/commit/2ccc16aa8d87c73e96420d7410d435655ab013e7","commit_message":"Fix for #1056","code_diff":"@@ -260,7 +260,11 @@ public interface Seq<T> extends ImmutableList<T>,\n         return Cons.cons(value,this);\n     }\n     default Seq<T> prependAll(Iterable<? extends T> it){\n-      return (Seq<T>)ImmutableList.super.prependAll(it);\n+        Seq<T> res = this;\n+        for(T next : it){\n+            res = res.prepend(next);\n+        }\n+      return res;\n     }\n \n     default Seq<T> take(final long num) {\n","changed_method_name":"prependAll","commit_message_token_length":5,"code_token_length":200,"combined_token_length":205}
{"commit_url":"https://github.com/SORMAS-Foundation/SORMAS-Project/commit/fcf3c0746d6e37ff18a376b7d2adeb19ec6195d8","commit_message":"#5612: Increased chunk size for lazy loading to 100\n\n- Avoids a 2nd query when initializing a list view","code_diff":"@@ -12,8 +12,8 @@ import com.vaadin.server.SerializableSupplier;\n import com.vaadin.ui.Grid;\n import com.vaadin.ui.renderers.HtmlRenderer;\n \n-import de.symeda.sormas.api.utils.criteria.BaseCriteria;\n import de.symeda.sormas.api.i18n.I18nProperties;\n+import de.symeda.sormas.api.utils.criteria.BaseCriteria;\n \n public class FilteredGrid<T, C extends BaseCriteria> extends Grid<T> {\n \n@@ -21,11 +21,17 @@ public class FilteredGrid<T, C extends BaseCriteria> extends Grid<T> {\n \n \tprivate static final long serialVersionUID = 8116377533153377424L;\n \n+\t/**\n+\t * For lazy loading: Defines how many entries are loaded into the grid when new data needs to be loaded for the visible range.\n+\t */\n+\tprivate static final int LAZY_BATCH_SIZE = 100;\n+\n \tprivate C criteria;\n \tprivate boolean inEagerMode;\n \n \tpublic FilteredGrid(Class<T> beanType) {\n \t\tsuper(beanType);\n+\t\tgetDataCommunicator().setMinPushSize(LAZY_BATCH_SIZE);\n \t}\n \n \tpublic C getCriteria() {\n","changed_method_name":"FilteredGrid::FilteredGrid","commit_message_token_length":27,"code_token_length":350,"combined_token_length":377}
{"commit_url":"https://github.com/SORMAS-Foundation/SORMAS-Project/commit/5752ebd20a0c9e308984349c1382c696fb0e365d","commit_message":"#6204 - reduce non needed complexity for all queries that use event user filter with health facility user","code_diff":"@@ -396,6 +396,7 @@ public class EventService extends AbstractCoreAdoService<Event> {\n \t\t\t\tfilter = CriteriaBuilderHelper\n \t\t\t\t\t.or(cb, filter, cb.equal(eventJoins.getLocation().get(Location.DISTRICT), currentUser.getHealthFacility().getDistrict()));\n \t\t\t}\n+\t\t\tbreak;\n \t\tcase LABORATORY:\n \t\t\tfinal Subquery<Long> sampleSubQuery = cq.subquery(Long.class);\n \t\t\tfinal Root<Sample> sampleRoot = sampleSubQuery.from(Sample.class);\n","changed_method_name":"EventService::createUserFilter","commit_message_token_length":20,"code_token_length":155,"combined_token_length":175}
{"commit_url":"https://github.com/finos/waltz/commit/9533421c3825e6d3fbc3717a5d57b92b5af369cf","commit_message":"CORS: cache OPT requests\n\n#3474","code_diff":"@@ -203,10 +203,9 @@ public class Main {\n     private void enableCORS() {\n \n         options(\"/*\", (req, res) -> {\n-\n             handleCORSHeader(req, res, \"Access-Control-Request-Headers\", \"Access-Control-Allow-Headers\");\n             handleCORSHeader(req, res, \"Access-Control-Request-Method\", \"Access-Control-Allow-Methods\");\n-\n+            res.header(\"Access-Control-Max-Age\", \"600\");\n             return \"OK\";\n         });\n \n","changed_method_name":"Main::enableCORS","commit_message_token_length":11,"code_token_length":194,"combined_token_length":205}
